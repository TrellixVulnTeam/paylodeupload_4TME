"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const GraphQL = __importStar(require("graphql"));
const graphql_1 = require("graphql");
const express_graphql_1 = require("express-graphql");
const graphql_query_complexity_1 = __importStar(require("graphql-query-complexity"));
const buildObjectType_1 = __importDefault(require("./schema/buildObjectType"));
const buildMutationInputType_1 = __importDefault(require("./schema/buildMutationInputType"));
const errorHandler_1 = __importDefault(require("./errorHandler"));
const buildBlockType_1 = __importDefault(require("./schema/buildBlockType"));
const buildPoliciesType_1 = __importDefault(require("./schema/buildPoliciesType"));
const buildLocaleInputType_1 = __importDefault(require("./schema/buildLocaleInputType"));
const buildFallbackLocaleInputType_1 = __importDefault(require("./schema/buildFallbackLocaleInputType"));
const init_1 = __importDefault(require("../collections/graphql/init"));
const init_2 = __importDefault(require("../globals/graphql/init"));
const init_3 = __importDefault(require("../preferences/graphql/init"));
const buildWhereInputType_1 = __importDefault(require("./schema/buildWhereInputType"));
class InitializeGraphQL {
    constructor(init) {
        this.Query = { name: 'Query', fields: {} };
        this.Mutation = { name: 'Mutation', fields: {} };
        this.errorResponses = [];
        Object.assign(this, init);
        this.init = this.init.bind(this);
        this.types = {
            blockTypes: {},
            blockInputTypes: {},
        };
        if (this.config.localization) {
            this.types.localeInputType = (0, buildLocaleInputType_1.default)(this.config.localization);
            this.types.fallbackLocaleInputType = (0, buildFallbackLocaleInputType_1.default)(this.config.localization);
        }
        this.Query = {
            name: 'Query',
            fields: {},
        };
        this.Mutation = {
            name: 'Mutation',
            fields: {},
        };
        this.buildBlockType = buildBlockType_1.default.bind(this);
        this.buildMutationInputType = buildMutationInputType_1.default.bind(this);
        this.buildWhereInputType = buildWhereInputType_1.default;
        this.buildObjectType = buildObjectType_1.default.bind(this);
        this.buildPoliciesType = buildPoliciesType_1.default.bind(this);
        this.initCollections = init_1.default.bind(this);
        this.initGlobals = init_2.default.bind(this);
        this.initPreferences = init_3.default.bind(this);
        this.initCollections();
        this.initGlobals();
        this.initPreferences();
        this.Query.fields.Access = {
            type: this.buildPoliciesType(),
            resolve: this.graphQL.resolvers.collections.auth.access,
        };
        if (typeof this.config.graphQL.queries === 'function') {
            const customQueries = this.config.graphQL.queries(GraphQL, init);
            this.Query = {
                ...this.Query,
                fields: {
                    ...this.Query.fields,
                    ...(customQueries || {}),
                },
            };
        }
        if (typeof this.config.graphQL.mutations === 'function') {
            const customMutations = this.config.graphQL.mutations(GraphQL, init);
            this.Mutation = {
                ...this.Mutation,
                fields: {
                    ...this.Mutation.fields,
                    ...(customMutations || {}),
                },
            };
        }
        const query = new graphql_1.GraphQLObjectType(this.Query);
        const mutation = new graphql_1.GraphQLObjectType(this.Mutation);
        const schema = {
            query,
            mutation,
        };
        this.schema = new graphql_1.GraphQLSchema(schema);
        this.extensions = async (info) => {
            const { result } = info;
            if (result.errors) {
                this.errorIndex = 0;
                const afterErrorHook = typeof this.config.hooks.afterError === 'function' ? this.config.hooks.afterError : null;
                this.errorResponses = await (0, errorHandler_1.default)(info, this.config.debug, afterErrorHook);
            }
            return null;
        };
        this.customFormatErrorFn = (error) => {
            if (this.errorResponses && this.errorResponses[this.errorIndex]) {
                const response = this.errorResponses[this.errorIndex];
                this.errorIndex += 1;
                return response;
            }
            return error;
        };
        this.validationRules = (variables) => ([
            (0, graphql_query_complexity_1.default)({
                estimators: [
                    (0, graphql_query_complexity_1.fieldExtensionsEstimator)(),
                    (0, graphql_query_complexity_1.simpleEstimator)({ defaultComplexity: 1 }), // Fallback if complexity not set
                ],
                maximumComplexity: this.config.graphQL.maxComplexity,
                variables,
                // onComplete: (complexity) => { console.log('Query Complexity:', complexity); },
            }),
        ]);
    }
    init(req, res) {
        this.errorResponses = null;
        return (0, express_graphql_1.graphqlHTTP)(async (request, response, { variables }) => ({
            schema: this.schema,
            customFormatErrorFn: this.customFormatErrorFn,
            extensions: this.extensions,
            context: { req, res },
            validationRules: this.validationRules(variables),
        }));
    }
}
exports.default = InitializeGraphQL;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvZ3JhcGhxbC9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsaURBQW1DO0FBQ25DLHFDQUFnRztBQUNoRyxxREFBOEM7QUFDOUMscUZBQXNHO0FBQ3RHLCtFQUF1RDtBQUN2RCw2RkFBcUU7QUFDckUsa0VBQTBDO0FBQzFDLDZFQUFxRDtBQUNyRCxtRkFBMkQ7QUFDM0QseUZBQWlFO0FBQ2pFLHlHQUFpRjtBQUNqRix1RUFBMEQ7QUFDMUQsbUVBQWtEO0FBQ2xELHVFQUEwRDtBQUUxRCx1RkFBK0Q7QUFVL0QsTUFBTSxpQkFBaUI7SUF5Q3JCLFlBQVksSUFBSTtRQWhDaEIsVUFBSyxHQUFxRCxFQUFFLElBQUksRUFBRSxPQUFPLEVBQUUsTUFBTSxFQUFFLEVBQUUsRUFBRSxDQUFDO1FBRXhGLGFBQVEsR0FBcUQsRUFBRSxJQUFJLEVBQUUsVUFBVSxFQUFFLE1BQU0sRUFBRSxFQUFFLEVBQUUsQ0FBQztRQTBCOUYsbUJBQWMsR0FBNEIsRUFBRSxDQUFDO1FBSzNDLE1BQU0sQ0FBQyxNQUFNLENBQUMsSUFBSSxFQUFFLElBQUksQ0FBQyxDQUFDO1FBQzFCLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7UUFFakMsSUFBSSxDQUFDLEtBQUssR0FBRztZQUNYLFVBQVUsRUFBRSxFQUFFO1lBQ2QsZUFBZSxFQUFFLEVBQUU7U0FDSixDQUFDO1FBRWxCLElBQUksSUFBSSxDQUFDLE1BQU0sQ0FBQyxZQUFZLEVBQUU7WUFDNUIsSUFBSSxDQUFDLEtBQUssQ0FBQyxlQUFlLEdBQUcsSUFBQSw4QkFBb0IsRUFBQyxJQUFJLENBQUMsTUFBTSxDQUFDLFlBQVksQ0FBQyxDQUFDO1lBQzVFLElBQUksQ0FBQyxLQUFLLENBQUMsdUJBQXVCLEdBQUcsSUFB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